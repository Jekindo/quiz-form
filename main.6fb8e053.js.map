{"mappings":"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","sources":["src/js/functions/get-refs.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@swc/helpers/lib/_check_private_redeclaration.js","node_modules/@parcel/runtime-js/lib/runtime-7356c429a03ae74e.js","src/js/quiz.js","src/js/functions/get-svg-sprite-url.js","node_modules/@parcel/runtime-js/lib/runtime-9023f7cb3fb4b663.js","node_modules/@swc/helpers/lib/_class_private_method_get.js","node_modules/@swc/helpers/lib/_class_private_method_init.js","src/js/components/alert.js","src/js/components/cancel-delete-btn.js","src/js/modules/question-card.js","src/js/modules/answers.js","src/js/functions/get-select-correct-answer-btns-components.js","src/js/functions/get-remove-answer-btns-components.js","src/js/functions/set-active-question-card.js","src/js/functions/collect-quiz-form-data.js","src/js/functions/on-add-question-btn-click.js"],"sourcesContent":["\nexport default function getRefs() {\n  return {\n    quizForm: document.querySelector('form[name=\"quizForm\"]'),\n    addQuestionBtn: document.querySelector(\n      'button[data-action=\"add-question\"]'\n    ),\n  };\n}\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _checkPrivateRedeclaration;\nfunction _checkPrivateRedeclaration(obj, privateCollection) {\n    if (privateCollection.has(obj)) {\n        throw new TypeError(\"Cannot initialize the same private elements twice on an object\");\n    }\n}\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"a2T3X\\\":\\\"main.6fb8e053.js\\\",\\\"8sfzT\\\":\\\"sprite.0f136237.svg\\\"}\"));","import * as bootstrap from 'bootstrap';\nimport getRefs from './functions/get-refs';\nimport getSvgSpriteUrl from './functions/get-svg-sprite-url';\nimport * as QuestionCard from './modules/question-card';\nimport * as Answers from './modules/answers';\nimport Alert from './components/alert';\nimport CancelDeleteBtn from './components/cancel-delete-btn';\nimport setActiveQuestionCard from './functions/set-active-question-card';\nimport onAddQuestionBtnClick from './functions/on-add-question-btn-click';\nimport getSelectCorrectAnswerButtonsComponents from './functions/get-select-correct-answer-btns-components';\nimport collectQuizFormData from './functions/collect-quiz-form-data';\n\nconst refs = getRefs();\nconst svgSpriteUrl = getSvgSpriteUrl();\nconst alert = new Alert({\n  selector: '.js-alert',\n});\nconst cancelDeleteBtn = new CancelDeleteBtn({\n  selector: 'button[data-action=\"cancel-remove-question\"]',\n});\nconst formData = [];\n\nrefs.quizForm.addEventListener('input', onQuizFormInput);\nrefs.quizForm.addEventListener('submit', onQuizFormSubmit);\nrefs.quizForm.addEventListener('click', onQuizFormInteraction);\nrefs.addQuestionBtn.addEventListener('click', onAddQuestionBtnClick);\ncancelDeleteBtn.buttonRef.addEventListener(\n  'click',\n  cancelDeleteBtn.onClick.bind(cancelDeleteBtn)\n);\nconst listentedSelects = [];\n\nfunction onQuizFormInteraction(evt) {\n  if (evt.target.dataset.action === 'delete-question') {\n    const questionToRemoveId = evt.target.getAttribute('question-id');\n    QuestionCard.removeById(questionToRemoveId);\n  }\n\n  if (evt.target.nodeName === 'INPUT' || evt.target.nodeName === 'SELECT') {\n    setActiveQuestionCard(evt);\n  }\n\n  if (evt.target.name === 'answerType') {\n    if (listentedSelects.includes(evt.target)) {\n      return;\n    }\n\n    listentedSelects.push(evt.target);\n\n    evt.target.addEventListener(\n      'change',\n      Answers.onAnswerTypeChange.bind(Answers)\n    );\n  }\n\n  if (evt.target.dataset.action === 'select-correct-answer') {\n    Answers.onSelectCorrectAnswerBtnCLick(evt);\n  }\n\n  if (evt.target.dataset.action === 'remove-answer') {\n    Answers.removeAnswer(evt);\n  }\n\n  if (evt.target.nodeName === 'INPUT' && evt.target.name === 'answerStub') {\n    Answers.renderNewAnswer(evt);\n  }\n}\n\nconst formHeading = document.querySelector('.card#heading');\n\nfunction onQuizFormSubmit(evt) {\n  evt.preventDefault();\n\n  const form = evt.currentTarget;\n  collectQuizFormData(form);\n\n  form.reset();\n}\n\nfunction onQuizFormInput(evt) {\n  //   formData[evt.target.name] = evt.target.value;\n  //   console.log(formData.get('name'));\n}\n\n","export default function getSvgSpriteUrl() {\n  return new URL('../../images/icons/sprite.svg', import.meta.url);\n}\n","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"8sfzT\")).toString();","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodGet;\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classPrivateMethodInit;\nvar _checkPrivateRedeclaration = _interopRequireDefault(require(\"./_check_private_redeclaration\"));\nfunction _classPrivateMethodInit(obj, privateSet) {\n    (0, _checkPrivateRedeclaration).default(obj, privateSet);\n    privateSet.add(obj);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","import * as QuestionCard from '../modules/question-card';\n\nconst NOTIFICATION_DELAY = 3000;\nlet timeoutId = null;\n\nexport default class Alert {\n  constructor({ selector }) {\n    this.refs = this.#getRefs(selector);\n\n    this.isActive = false;\n  }\n\n  #getRefs(selector) {\n    const refs = {};\n\n    refs.alert = document.querySelector(selector);\n    refs.label = refs.alert.querySelector('.label');\n\n    return refs;\n  }\n\n  show() {\n    this.isActive = true;\n\n    this.refs.alert.classList.add('is-visible');\n\n    timeoutId = setTimeout(() => {\n      this.hide();\n    }, NOTIFICATION_DELAY);\n  }\n\n  hide(isCancelBtnPressed) {\n    this.refs.alert.classList.remove('is-visible');\n    QuestionCard.updateId(isCancelBtnPressed);\n  }\n\n  clearTimeout() {\n    clearTimeout(timeoutId);\n  }\n\n  //   onMouseLeave(evt) {\n  //     console.log('Вешаем тайм-аут');\n  //\n  //     timeoutId = setTimeout(() => {\n  //       this.hide();\n  //       console.log('Закрывает алерт');\n  //     }, NOTIFICATION_DELAY);\n  //   }\n  //\n  //   onMouseEnter(evt) {\n  //     this.clearTimeout();\n  //     console.log('Снимаем тайм-аут');\n  //   }\n}\n","import * as QuestionCard from '../modules/question-card';\nimport Alert from './alert';\n\nconst alert = new Alert({\n  selector: '.js-alert',\n});\n\nexport default class CancelDeleteBtn {\n  constructor({ selector }) {\n    this.buttonRef = this.#getRef(selector);\n\n    this._isPressed = false;\n  }\n\n  #getRef(selector) {\n    return document.querySelector(selector);\n  }\n\n  onClick() {\n\tif(alert.isActive) {\n\t\tconsole.log('Алерт активный')\n\t}\n\t\n    this._isPressed = true;\n\n    alert.clearTimeout();\n    alert.hide(this._isPressed);\n\n    QuestionCard.retrieve();\n  }\n\n  updateDeletedQuestionId(id) {\n    this.buttonRef.setAttribute('deleted-question-id', id);\n  }\n\n  set isPressed(value) {\n    this._isPressed = value;\n  }\n\n  get isPressed() {\n    return this._isPressed;\n  }\n}\n","import Alert from '../components/alert';\nimport getRefs from '../functions/get-refs';\nimport getSvgSpriteUrl from '../functions/get-svg-sprite-url';\nimport CancelDeleteBtn from '../components/cancel-delete-btn';\n\nconst refs = getRefs();\nconst svgSpriteUrl = getSvgSpriteUrl();\nconst alert = new Alert({\n  selector: '.js-alert',\n});\nconst cancelDeleteBtn = new CancelDeleteBtn({\n  selector: 'button[data-action=\"cancel-remove-question\"]',\n});\nlet deletedQuestionCardMarkup = null;\n\n// * Логика добавления нового вопроса\nexport const renderNew = qId => {\n  const markup = `\n\t<div class=\"card js-question-card is-show rounded-top p-4 mb-3\" id=\"${qId}\">\n\t\t  <div class=\"row\">\n\t\t\t<div class=\"col-md-6 mb-3\">\n\t\t\t  <label class=\"form-label\"> Запитання \n\t\t\t  <input\n\t\t\t\tclass=\"form-control mt-2\"\n\t\t\t\ttype=\"text\"\n\t\t\t\tname=\"question\"\n\t\t\t\tplaceholder=\"Хто президент України ?\"\n\t\t\t  />\n\t\t\t  </label>\n\t\t\t</div>\n  \n\t\t\t<div class=\"col-md-6 mb-3\">\n\t\t\t  <label class=\"form-label\">\n\t\t\t  Тип відповіді\n\t\t\t  <select\n\t\t\t\tclass=\"form-select js-form-select mt-2\"\n\t\t\t\tname=\"answerType\"\n\t\t\t  >\n\t\t\t\t<option value=\"radio\" selected>Один зі списку</option>\n\t\t\t\t<option value=\"checkbox\">Декілька зі списку</option>\n\t\t\t\t<option value=\"text\">текст (рядок)</option>\n\t\t\t\t<option value=\"textarea\">текст (абзац)</option>\n\t\t\t  </select>\n\t\t\t  </label>\n\t\t\t</div>\n\t\t  </div>\n  \n\t\t  <div class=\"mb-3\" id=\"answers-container\">\n\t\t\t<div class=\"input-group w-100 mb-3 align-items-center\">\n\t\t\t  <svg class=\"\" width=\"22\" height=\"22\">\n\t\t\t\t<use href=\"${svgSpriteUrl.pathname}#circle\"></use>\n\t\t\t  </svg>\n  \n\t\t\t  <input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"form-control ms-2\"\n\t\t\t\tname=\"answer\"\n\t\t\t\tvalue=\"Варіант 1\"\n\t\t\t  />\n  \n\t\t\t  <button\n\t\t\t\tclass=\"action-button\"\n\t\t\t\ttype=\"button\"\n\t\t\t\taria-label=\"select correct answer\"\n\t\t\t\tdata-action=\"select-correct-answer\"\n\t\t\t  >\n\t\t\t\t<svg class=\"action-button__icon\" data-action=\"select-correct-answer\">\n\t\t\t\t  <use href=\"${svgSpriteUrl.pathname}#check\" data-action=\"select-correct-answer\"></use>\n\t\t\t\t</svg>\n\t\t\t  </button>\n\t\t\t  <button\n\t\t\t\tclass=\"action-button\"\n\t\t\t\ttype=\"button\"\n\t\t\t\taria-label=\"remove answer\"\n\t\t\t\tdata-action=\"remove-answer\"\n\t\t\t  >\n\t\t\t\t<svg class=\"action-button__icon\" data-action=\"remove-answer\">\n\t\t\t\t  <use href=\"${svgSpriteUrl.pathname}#x-lg\" data-action=\"remove-answer\"></use>\n\t\t\t\t</svg>\n\t\t\t  </button>\n\t\t\t</div>\n  \n\t\t\t<div class=\"input-group w-100 mb-3 align-items-center\">\n\t\t\t  <svg class=\"\" width=\"22\" height=\"22\">\n\t\t\t\t<use href=\"${svgSpriteUrl.pathname}#circle\"></use>\n\t\t\t  </svg>\n  \n\t\t\t  <input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"js-disabled-form-control form-control ms-2 disabled text-secondary\"\n\t\t\t\tname=\"answerStub\"\n\t\t\t\tvalue=\"Додати варіант\"\n\t\t\t  />\n\t\t\t</div>\n\t\t  </div>\n  \n\t\t  <hr />\n  \n\t\t  \n\t\t  <button\n\t\t\tclass=\"action-button ms-auto\"\n\t\t\ttype=\"button\"\n\t\t\taria-label=\"delete question\"\n\t\t\tdata-action=\"delete-question\"\n\t\t\tquestion-id=\"${qId}\"\n\t\t  >\n\t\t\t<svg class=\"action-button__icon\" question-id=\"${qId}\" data-action=\"delete-question\">\n\t\t\t  <use href=\"${svgSpriteUrl.pathname}#trash-fill\" question-id=\"${qId}\" data-action=\"delete-question\"></use>\n\t\t\t</svg>\n\t\t  </button>\n\t\t</div>\n  \n\t\t</div>\n\t\t</div>\n\t`;\n\n  refs.addQuestionBtn.insertAdjacentHTML('beforebegin', markup);\n};\n\nexport const removeById = qId => {\n  cancelDeleteBtn.updateDeletedQuestionId(qId);\n\n  const questionCard = document.querySelector(`.js-question-card[id=\"${qId}\"]`);\n  const deletedQuestionCardInnerMarkup = questionCard.innerHTML;\n  const card = document.createElement('div');\n\n  card.classList.add('card', 'js-question-card', 'rounded-top', 'p-4', 'mb-3');\n  card.id = cancelDeleteBtn.buttonRef.getAttribute('deleted-question-id');\n  card.insertAdjacentHTML('afterbegin', deletedQuestionCardInnerMarkup);\n  deletedQuestionCardMarkup = card;\n\n  questionCard.classList.remove('is-show');\n\n  setTimeout(() => {\n    questionCard.remove();\n    alert.show();\n    // alert.refs.alert.addEventListener(\n    //   'mouseenter',\n    //   alert.onMouseEnter.bind(alert)\n    // );\n    // alert.refs.alert.addEventListener(\n    //   'mouseleave',\n    //   alert.onMouseLeave.bind(alert)\n    // );\n  }, 250);\n};\n\nexport const updateId = isCancelBtnPressed => {\n  if (isCancelBtnPressed) {\n    return;\n  }\n\n  const questionCards = document.querySelectorAll('.js-question-card');\n\n  [...questionCards].map((question, index) => {\n    question.id = `q${index + 1}`;\n\n    const deleteQuestionBtn = question.querySelectorAll('[question-id]');\n    [...deleteQuestionBtn].map(element => {\n      element.setAttribute('question-id', `q${index + 1}`);\n    });\n  });\n};\n\nexport const retrieve = () => {\n  const currentQuestionid = cancelDeleteBtn.buttonRef.getAttribute(\n    'deleted-question-id'\n  );\n  const currentQuestionIdToNumber = Number(\n    currentQuestionid\n      .split('')\n      .filter(element => !isNaN(element))\n      .join('')\n  );\n  let previousQuestionId = null;\n\n  setTimeout(() => {\n    deletedQuestionCardMarkup.classList.add('is-show');\n  }, 250);\n\n  if (currentQuestionIdToNumber === 1) {\n    document\n      .querySelector(`.card[id=\"heading\"]`)\n      .after(deletedQuestionCardMarkup);\n  } else {\n    previousQuestionId = `q${currentQuestionIdToNumber - 1}`;\n    document\n      .querySelector(`.js-question-card[id=\"${previousQuestionId}\"]`)\n      .after(deletedQuestionCardMarkup);\n  }\n};\n","import getRefs from '../functions/get-refs';\nimport getSvgSpriteUrl from '../functions/get-svg-sprite-url';\nimport getRemoveAnswerButtonsComponents from '../functions/get-remove-answer-btns-components';\nimport getSelectCorrectAnswerButtonsComponents from '../functions/get-select-correct-answer-btns-components';\n\nconst refs = getRefs();\nconst svgSpriteUrl = getSvgSpriteUrl();\n\nexport const onAnswerTypeChange = evt => {\n  // * Логика рендера ответов по типу\n\n  const questionType = evt.target.value;\n  renderAnswerSetup(questionType, evt.target);\n};\n\nexport const renderAnswerSetup = (questionType, target) => {\n  switch (questionType) {\n    case 'text':\n      renderAnswerTypeShortText(target);\n      break;\n\n    case 'textarea':\n      renderAnswerTypeExpandedText(target);\n      break;\n\n    case 'radio':\n      renderAnswerTypeRadio(target);\n      break;\n\n    case 'checkbox':\n      renderAnswerTypeCheckbox(target);\n      break;\n\n    default:\n      console.log('Invalid question type');\n  }\n};\n\nexport const renderAnswerTypeShortText = target => {\n  // * Логика рендера ответов \"текст (рядок)\"\n\n  const markup = `\n\t<label class=\"form-label\">\n\t  Коротка відповідь\n\t  <input class=\"form-control mt-2\" id=\"answer\" type=\"text\" name=\"answer\" correct />\n\t</label>\n\t`;\n\n  const questionCard = target.offsetParent;\n  const answersContainer = questionCard.querySelector('#answers-container');\n\n  answersContainer.innerHTML = markup;\n};\n\nexport const renderAnswerTypeExpandedText = target => {\n  // * Логика рендера ответов \"текст (абзац)\"\n\n  const markup = `\n  <label class=\"form-label\">\n  \tРозгорнута відповідь\n  \t<textarea\n\t\tclass=\"form-control mt-2\"\n\t\tname=\"answer\"\n\t\tcorrect\n\t\trows=\"5\"\n\t\tplaceholder=\"Введіть відповідь тут...\"\n   ></textarea>\n  </label>\n\t`;\n\n  const questionCard = target.offsetParent;\n  const answersContainer = questionCard.querySelector('#answers-container');\n\n  answersContainer.innerHTML = markup;\n};\n\nexport const renderAnswerTypeRadio = target => {\n  // * Логика рендера ответов \"Один зі списку\"\n\n  const markup = `\n  <div class=\"input-group w-100 mb-3 align-items-center\">\n\t\t\t  <svg class=\"\" width=\"22\" height=\"22\">\n\t\t\t\t<use href=\"${svgSpriteUrl.pathname}#circle\"></use>\n\t\t\t  </svg>\n  \n\t\t\t  <input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"form-control  ms-2\"\n\t\t\t\tname=\"answer\"\n\t\t\t\tvalue=\"Варіант 1\"\n\t\t\t  />\n  \n\t\t\t  <button\n\t\t\t\tclass=\"action-button\"\n\t\t\t\ttype=\"button\"\n\t\t\t\taria-label=\"select correct answer\"\n\t\t\t\tdata-action=\"select-correct-answer\"\n\t\t\t  >\n\t\t\t\t<svg class=\"action-button__icon\" data-action=\"select-correct-answer\">\n\t\t\t\t  <use href=\"${svgSpriteUrl.pathname}#check\" data-action=\"select-correct-answer\"></use>\n\t\t\t\t</svg>\n\t\t\t  </button>\n\t\t\t  <button\n\t\t\t\tclass=\"action-button\"\n\t\t\t\ttype=\"button\"\n\t\t\t\taria-label=\"remove answer\"\n\t\t\t\tdata-action=\"remove-answer\"\n\t\t\t  >\n\t\t\t\t<svg class=\"action-button__icon\" data-action=\"remove-answer\">\n\t\t\t\t  <use href=\"${svgSpriteUrl.pathname}#x-lg\" data-action=\"remove-answer\"></use>\n\t\t\t\t</svg>\n\t\t\t  </button>\n\t\t\t</div>\n  \n\t\t\t<div class=\"input-group w-100 mb-3 align-items-center\">\n\t\t\t  <svg class=\"\" width=\"22\" height=\"22\">\n\t\t\t\t<use href=\"${svgSpriteUrl.pathname}#circle\"></use>\n\t\t\t  </svg>\n  \n\t\t\t  <input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"js-disabled-form-control form-control ms-2 disabled text-secondary\"\n\t\t\t\tname=\"answerStub\"\n\t\t\t\tvalue=\"Додати варіант\"\n\t\t\t  />\n\t\t\t</div>\n\t\t  </div>\n\t`;\n\n  const questionCard = target.offsetParent;\n  const answersContainer = questionCard.querySelector('#answers-container');\n\n  answersContainer.innerHTML = markup;\n};\n\nexport const renderAnswerTypeCheckbox = target => {\n  // * Логика рендера ответов \"Декілька зі списку\"\n\n  const markup = `\n  <div class=\"input-group w-100 mb-3 align-items-center\">\n\t\t\t  <svg class=\"\" width=\"22\" height=\"22\">\n\t\t\t\t<use href=\"${svgSpriteUrl.pathname}#app\"></use>\n\t\t\t  </svg>\n  \n\t\t\t  <input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"form-control  ms-2\"\n\t\t\t\tname=\"answer\"\n\t\t\t\tvalue=\"Варіант 1\"\n\t\t\t  />\n  \n\t\t\t  <button\n\t\t\t\tclass=\"action-button\"\n\t\t\t\ttype=\"button\"\n\t\t\t\taria-label=\"select correct answer\"\n\t\t\t\tdata-action=\"select-correct-answer\"\n\t\t\t  >\n\t\t\t\t<svg class=\"action-button__icon\" data-action=\"select-correct-answer\">\n\t\t\t\t  <use href=\"${svgSpriteUrl.pathname}#check\" data-action=\"select-correct-answer\"></use>\n\t\t\t\t</svg>\n\t\t\t  </button>\n\t\t\t  <button\n\t\t\t\tclass=\"action-button\"\n\t\t\t\ttype=\"button\"\n\t\t\t\taria-label=\"remove answer\"\n\t\t\t\tdata-action=\"remove-answer\"\n\t\t\t  >\n\t\t\t\t<svg class=\"action-button__icon\" data-action=\"remove-answer\">\n\t\t\t\t  <use href=\"${svgSpriteUrl.pathname}#x-lg\" data-action=\"remove-answer\"></use>\n\t\t\t\t</svg>\n\t\t\t  </button>\n\t\t\t</div>\n  \n\t\t\t<div class=\"input-group w-100 mb-3 align-items-center\">\n\t\t\t  <svg class=\"\" width=\"22\" height=\"22\">\n\t\t\t\t<use href=\"${svgSpriteUrl.pathname}#app\"></use>\n\t\t\t  </svg>\n  \n\t\t\t  <input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclass=\"js-disabled-form-control form-control ms-2 disabled text-secondary\"\n\t\t\t\tname=\"answerStub\"\n\t\t\t\tvalue=\"Додати варіант\"\n\t\t\t  />\n\t\t\t</div>\n\t\t  </div>\n\t`;\n\n  const questionCard = target.offsetParent;\n  const answersContainer = questionCard.querySelector('#answers-container');\n\n  answersContainer.innerHTML = markup;\n};\n\nexport const onSelectCorrectAnswerBtnCLick = evt => {\n  const selectCorrectAnswerBtns = getSelectCorrectAnswerButtonsComponents();\n  const nextTargetedBtn = selectCorrectAnswerBtns.find(btn =>\n    btn.includes(evt.target)\n  )[0];\n  const nextCorrectInput = nextTargetedBtn.previousElementSibling;\n  const inputGroup = nextCorrectInput.parentNode;\n  const questionCard = inputGroup.offsetParent;\n  const answerType = questionCard.querySelector('.js-form-select');\n  const answersContainer = inputGroup.parentNode;\n  const currectCorrectInput = answersContainer.querySelector(\n    'input.form-control.is-correct'\n  );\n  const currentTargetedBtn = answersContainer.querySelector(\n    'button.action-button.is-active'\n  );\n\n  if (\n    currectCorrectInput &&\n    answerType.value !== 'checkbox' &&\n    currectCorrectInput !== nextCorrectInput\n  ) {\n    resetCorrectAnswer(currentTargetedBtn, currectCorrectInput);\n  }\n\n  if (nextCorrectInput.classList.contains('is-correct')) {\n    resetCorrectAnswer(nextTargetedBtn, nextCorrectInput);\n    return;\n  }\n\n  setCorrectAnswer(nextTargetedBtn, nextCorrectInput);\n};\n\nexport const renderNewAnswer = evt => {\n  const answerId = '';\n  const input = evt.target;\n  const answerTypeIconLabel =\n    input.previousElementSibling.firstElementChild.href.animVal;\n  console.log('🚀 answerTypeIconLabel:', answerTypeIconLabel);\n  const markup = `\n  <button\n\tclass=\"action-button\"\n\ttype=\"button\"\n\taria-label=\"select correct answer\"\n\tdata-action=\"select-correct-answer\"\n  >\n  \t<svg class=\"action-button__icon\" data-action=\"select-correct-answer\">\n\t\t<use href=\"${svgSpriteUrl.pathname}#check\" data-action=\"select-correct-answer\"></use>\n\t</svg>\n  </button>\n  <button\n    class=\"action-button\"\n    type=\"button\"\n    aria-label=\"remove answer\"\n    data-action=\"remove-answer\"\n  >\n\t<svg class=\"action-button__icon\" data-action=\"remove-answer\">\n\t\t<use href=\"${svgSpriteUrl.pathname}#x-lg\" data-action=\"remove-answer\"></use>\n\t</svg>\n  </button>\n  `;\n\n  input.classList.remove('disabled', 'text-secondary');\n  input.value = `Варіант ${answerId}`;\n  input.name = 'answer';\n  input.insertAdjacentHTML('afterend', markup);\n\n  renderAnswerStub(input.parentNode, answerTypeIconLabel);\n};\n\nfunction renderAnswerStub(inputGroup, answerType) {\n  const markup = `\n    <div class=\"input-group w-100 mb-3 align-items-center\">\n        <svg class=\"\" width=\"22\" height=\"22\">\n            <use href=\"${svgSpriteUrl.pathname}#${answerType.slice(\n    answerType.indexOf('#') + 1\n  )}\"></use>\n        </svg>\n\n        <input\n            type=\"text\"\n            class=\"js-disabled-form-control form-control ms-2 disabled text-secondary\"\n            name=\"answerStub\"\n            value=\"Додати варіант\"\n        />\n    </div>\n  `;\n\n  inputGroup.insertAdjacentHTML('afterend', markup);\n}\n\n// * Логика удаления ответа\nexport const removeAnswer = evt => {\n  const removeAnswerBtns = getRemoveAnswerButtonsComponents();\n  const targetedBtn = removeAnswerBtns.find(btn => btn.includes(evt.target))[0];\n\n  const inputGroup = targetedBtn.parentNode;\n  inputGroup.classList.add('is-deleted');\n\n  setTimeout(() => {\n    inputGroup.remove();\n  }, 250);\n};\n\nfunction setCorrectAnswer(btn, input) {\n  btn.classList.add('is-active');\n  input.classList.add('is-correct');\n  input.setAttribute('correct', '');\n}\n\nfunction resetCorrectAnswer(btn, input) {\n  btn.classList.remove('is-active');\n  input.classList.remove('is-correct');\n  input.removeAttribute('correct');\n}\n\nfunction updateCorrectAnswer() {}\n","export default function getSelectCorrectAnswerButtonsComponents() {\n  const selectCorrectAnswerButtons = document.querySelectorAll(\n    'button[data-action=\"select-correct-answer\"]'\n  );\n\n  const buttonComponents = [...selectCorrectAnswerButtons].map(btn => {\n    const btnComponents = [];\n\n    btnComponents.push(btn);\n\n    [...btn.children].forEach(component => {\n      btnComponents.push(component);\n\n      if (component.children) {\n        btnComponents.push(...component.children);\n      }\n    });\n\n    return btnComponents;\n  });\n\n  return buttonComponents;\n}\n","export default function getRemoveAnswerButtonsComponents() {\n  const removeAnswerButtons = document.querySelectorAll(\n    'button[data-action=\"remove-answer\"]'\n  );\n\n  const buttonComponents = [...removeAnswerButtons].map(btn => {\n    const btnComponents = [];\n\n    btnComponents.push(btn);\n\n    [...btn.children].forEach(component => {\n      btnComponents.push(component);\n\n      if (component.children) {\n        btnComponents.push(...component.children);\n      }\n    });\n\n    return btnComponents;\n  });\n\n  return buttonComponents;\n}\n","export default function setActiveQuestionCard(evt) {\n  const currentActiveCard = document.querySelector('.card.is-active');\n\n  if (currentActiveCard) {\n    currentActiveCard.classList.remove('is-active');\n  }\n\n  if (evt.target.offsetParent.classList.contains('card')) {\n    const nextActiveBtn = evt.target.offsetParent;\n    nextActiveBtn.classList.add('is-active');\n  }\n\n  if (!evt.target.offsetParent.classList.contains('card')) {\n    const nextActiveBtn = evt.target.offsetParent.offsetParent;\n    nextActiveBtn.classList.add('is-active');\n  }\n}\n","import getSelectCorrectAnswerButtonsComponents from './get-select-correct-answer-btns-components';\n\nexport default function collectQuizFormData(form) {\n  const formData = [];\n  const refs = {\n    questions: document.querySelectorAll('.js-question-card'),\n    heading: document.querySelectorAll('.card#heading > input'),\n  };\n\n  const headingData = collectHeadingData(refs);\n  const questionsData = collectQuestionsData(refs);\n\n  formData.push(headingData, ...questionsData);\n\n  return formData;\n}\n\nfunction collectHeadingData(refs) {\n  const headingData = [...refs.heading].reduce((data, input) => {\n    data[input.name] = input.value;\n\n    return data;\n  }, {});\n\n  return headingData;\n}\n\nfunction collectQuestionsData(refs) {\n  const questionsData = [...refs.questions].reduce((data, question) => {\n    const questionElements = {\n      question: question.querySelector('input[name=\"question\"]'),\n      answerType: question.querySelector('select[name=\"answerType\"]'),\n      answers: question.querySelectorAll('input[name=\"answer\"]'),\n    };\n\n    const questionData = {\n      [questionElements.question.name]: questionElements.question.value,\n      [questionElements.answerType.name]: questionElements.answerType.value,\n      answers: [],\n    };\n\n    [...questionElements.answers].forEach((answer, index) => {\n      const answerData = {\n        id: index + 1,\n        value: answer.value,\n        correct: answer.hasAttribute('correct'),\n      };\n\n      questionData.answers.push(answerData);\n    });\n\n    data.push(questionData);\n\n    return data;\n  }, []);\n\n  return questionsData;\n}\n","import * as QuestionCard from '../modules/question-card';\n\nexport default function onAddQuestionBtnClick(evt) {\n  const btn = evt.currentTarget;\n  const currentQuestionIdLabel = btn.previousElementSibling.getAttribute('id');\n  const currentQuestionIdNumber = Number(\n    currentQuestionIdLabel\n      .split('')\n      .filter(element => !isNaN(element))\n      .join('')\n  );\n  const questionIdToRender = `q${currentQuestionIdNumber + 1}`;\n\n  QuestionCard.renderNew(questionIdToRender);\n}\n"],"names":["$d1edeacfb01b867e$export$2e2bcd8739ae039","quizForm","document","querySelector","addQuestionBtn","$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","defineProperty","module","exports","value","default","obj","privateCollection","has","TypeError","parcelRequire","register","JSON","parse","$47218391f5923d02$export$2e2bcd8739ae039","URL","$be38923d7f70d1bd$exports","resolve","import","meta","url","toString","$c9f733bc98e3bbfd$exports","receiver","privateSet","fn","$60afe4cd2804d2bb$exports","$60afe4cd2804d2bb$var$_checkPrivateRedeclaration","add","__esModule","$0f8e2b52f806f16c$var$timeoutId","$0f8e2b52f806f16c$var$_getRefs","WeakSet","$0f8e2b52f806f16c$export$2e2bcd8739ae039","show","this","isActive","refs","alert","classList","setTimeout","hide","isCancelBtnPressed","remove","$3f21c0440cd2f7fb$export$149c75ca6de568f9","clearTimeout","constructor","selector","$parcel$interopDefault","$0f8e2b52f806f16c$var$getRefs","call","label","$8fb98e4cd64b1d14$var$alert","$8fb98e4cd64b1d14$var$_getRef","$8fb98e4cd64b1d14$export$2e2bcd8739ae039","onClick","console","log","_isPressed","$3f21c0440cd2f7fb$export$8a4d17b6e8486e66","updateDeletedQuestionId","buttonRef","setAttribute","isPressed","$8fb98e4cd64b1d14$var$getRef","$3f21c0440cd2f7fb$var$refs","$3f21c0440cd2f7fb$var$svgSpriteUrl","$3f21c0440cd2f7fb$var$alert","$3f21c0440cd2f7fb$var$cancelDeleteBtn","$3f21c0440cd2f7fb$var$deletedQuestionCardMarkup","querySelectorAll","map","question","index","element","currentQuestionid","getAttribute","currentQuestionIdToNumber","Number","split","filter","isNaN","join","previousQuestionId","after","$65ecec1130bd4bec$var$svgSpriteUrl","$65ecec1130bd4bec$export$1c2c2fc64ba721d0","evt","questionType","target","$65ecec1130bd4bec$export$97b40043407b4bea","$65ecec1130bd4bec$export$3e80ed480c0387fa","$65ecec1130bd4bec$export$b2d43a04476e73ab","$65ecec1130bd4bec$export$27c7ecc37e184b20","$65ecec1130bd4bec$export$c50fd635a80d8ccd","offsetParent","innerHTML","markup","pathname","$65ecec1130bd4bec$export$78d8b08dbd802d3f","selectCorrectAnswerBtns","btn","btnComponents","push","children","forEach","component","nextTargetedBtn","find","includes","nextCorrectInput","previousElementSibling","inputGroup","parentNode","answerType","answersContainer","currectCorrectInput","currentTargetedBtn","input","$65ecec1130bd4bec$var$resetCorrectAnswer","contains","$65ecec1130bd4bec$export$85be56c7d4a40461","answerTypeIconLabel","firstElementChild","href","animVal","name","insertAdjacentHTML","slice","indexOf","$65ecec1130bd4bec$var$renderAnswerStub","$65ecec1130bd4bec$export$f8ec0448ea3b075b","removeAttribute","$e120504fe9dc07c0$export$2e2bcd8739ae039","currentActiveCard","$d4c2d58e158630ee$export$2e2bcd8739ae039","form","formData","questions","heading","headingData","reduce","data","$d4c2d58e158630ee$var$collectHeadingData","questionsData","questionElements","answers","questionData","answer","answerData","correct","hasAttribute","$d4c2d58e158630ee$var$collectQuestionsData","$90465dc3aed6b185$var$refs","$90465dc3aed6b185$var$cancelDeleteBtn","addEventListener","preventDefault","currentTarget","reset","dataset","action","qId","questionCard","deletedQuestionCardInnerMarkup","card","createElement","$3f21c0440cd2f7fb$export$ee07572839a65b19","nodeName","$90465dc3aed6b185$var$listentedSelects","$65ecec1130bd4bec$exports","onAnswerTypeChange","bind","onSelectCorrectAnswerBtnCLick","removeAnswer","renderNewAnswer","currentQuestionIdLabel","$3f21c0440cd2f7fb$export$631a27ddb9306375"],"version":3,"file":"main.6fb8e053.js.map"}